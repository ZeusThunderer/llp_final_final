/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SEND_STATEMENT_SERVICE_H
#define SEND_STATEMENT_SERVICE_H

#include <thrift/c_glib/processor/thrift_dispatch_processor.h>

#include "nt_structs_types.h"

/* SendStatement_service service interface */
typedef struct _SendStatement_serviceIf SendStatement_serviceIf;  /* dummy object */

struct _SendStatement_serviceIfInterface
{
  GTypeInterface parent;

  gboolean (*execute_stmt) (SendStatement_serviceIf *iface, ServerResponse ** _return, const Statement_ * statement, GError **error);
};
typedef struct _SendStatement_serviceIfInterface SendStatement_serviceIfInterface;

GType send_statement_service_if_get_type (void);
#define TYPE_SEND_STATEMENT_SERVICE_IF (send_statement_service_if_get_type())
#define SEND_STATEMENT_SERVICE_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SEND_STATEMENT_SERVICE_IF, SendStatement_serviceIf))
#define IS_SEND_STATEMENT_SERVICE_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SEND_STATEMENT_SERVICE_IF))
#define SEND_STATEMENT_SERVICE_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), TYPE_SEND_STATEMENT_SERVICE_IF, SendStatement_serviceIfInterface))

gboolean send_statement_service_if_execute_stmt (SendStatement_serviceIf *iface, ServerResponse ** _return, const Statement_ * statement, GError **error);

/* SendStatement_service service client */
struct _SendStatement_serviceClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _SendStatement_serviceClient SendStatement_serviceClient;

struct _SendStatement_serviceClientClass
{
  GObjectClass parent;
};
typedef struct _SendStatement_serviceClientClass SendStatement_serviceClientClass;

GType send_statement_service_client_get_type (void);
#define TYPE_SEND_STATEMENT_SERVICE_CLIENT (send_statement_service_client_get_type())
#define SEND_STATEMENT_SERVICE_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SEND_STATEMENT_SERVICE_CLIENT, SendStatement_serviceClient))
#define SEND_STATEMENT_SERVICE_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_SEND_STATEMENT_SERVICE_CLIENT, SendStatement_serviceClientClass))
#define SEND_STATEMENT_SERVICE_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SEND_STATEMENT_SERVICE_CLIENT))
#define SEND_STATEMENT_SERVICE_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SEND_STATEMENT_SERVICE_CLIENT))
#define SEND_STATEMENT_SERVICE_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SEND_STATEMENT_SERVICE_CLIENT, SendStatement_serviceClientClass))

gboolean send_statement_service_client_execute_stmt (SendStatement_serviceIf * iface, ServerResponse ** _return, const Statement_ * statement, GError ** error);
gboolean send_statement_service_client_send_execute_stmt (SendStatement_serviceIf * iface, const Statement_ * statement, GError ** error);
gboolean send_statement_service_client_recv_execute_stmt (SendStatement_serviceIf * iface, ServerResponse ** _return, GError ** error);
void send_statement_service_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void send_statement_service_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

/* SendStatement_service handler (abstract base class) */
struct _SendStatement_serviceHandler
{
  GObject parent;
};
typedef struct _SendStatement_serviceHandler SendStatement_serviceHandler;

struct _SendStatement_serviceHandlerClass
{
  GObjectClass parent;

  gboolean (*execute_stmt) (SendStatement_serviceIf *iface, ServerResponse ** _return, const Statement_ * statement, GError **error);
};
typedef struct _SendStatement_serviceHandlerClass SendStatement_serviceHandlerClass;

GType send_statement_service_handler_get_type (void);
#define TYPE_SEND_STATEMENT_SERVICE_HANDLER (send_statement_service_handler_get_type())
#define SEND_STATEMENT_SERVICE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SEND_STATEMENT_SERVICE_HANDLER, SendStatement_serviceHandler))
#define IS_SEND_STATEMENT_SERVICE_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SEND_STATEMENT_SERVICE_HANDLER))
#define SEND_STATEMENT_SERVICE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_SEND_STATEMENT_SERVICE_HANDLER, SendStatement_serviceHandlerClass))
#define IS_SEND_STATEMENT_SERVICE_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SEND_STATEMENT_SERVICE_HANDLER))
#define SEND_STATEMENT_SERVICE_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SEND_STATEMENT_SERVICE_HANDLER, SendStatement_serviceHandlerClass))

gboolean send_statement_service_handler_execute_stmt (SendStatement_serviceIf *iface, ServerResponse ** _return, const Statement_ * statement, GError **error);

/* SendStatement_service processor */
struct _SendStatement_serviceProcessor
{
  ThriftDispatchProcessor parent;

  /* protected */
  SendStatement_serviceHandler *handler;
  GHashTable *process_map;
};
typedef struct _SendStatement_serviceProcessor SendStatement_serviceProcessor;

struct _SendStatement_serviceProcessorClass
{
  ThriftDispatchProcessorClass parent;

  /* protected */
  gboolean (*dispatch_call) (ThriftDispatchProcessor *processor,
                             ThriftProtocol *in,
                             ThriftProtocol *out,
                             gchar *fname,
                             gint32 seqid,
                             GError **error);
};
typedef struct _SendStatement_serviceProcessorClass SendStatement_serviceProcessorClass;

GType send_statement_service_processor_get_type (void);
#define TYPE_SEND_STATEMENT_SERVICE_PROCESSOR (send_statement_service_processor_get_type())
#define SEND_STATEMENT_SERVICE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SEND_STATEMENT_SERVICE_PROCESSOR, SendStatement_serviceProcessor))
#define IS_SEND_STATEMENT_SERVICE_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SEND_STATEMENT_SERVICE_PROCESSOR))
#define SEND_STATEMENT_SERVICE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_SEND_STATEMENT_SERVICE_PROCESSOR, SendStatement_serviceProcessorClass))
#define IS_SEND_STATEMENT_SERVICE_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SEND_STATEMENT_SERVICE_PROCESSOR))
#define SEND_STATEMENT_SERVICE_PROCESSOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SEND_STATEMENT_SERVICE_PROCESSOR, SendStatement_serviceProcessorClass))

#endif /* SEND_STATEMENT_SERVICE_H */
